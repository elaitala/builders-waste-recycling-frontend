{"ast":null,"code":"var _jsxFileName = \"/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/Job/Job.js\";\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport './Job.css';\nimport JobDetail from './JobDetail/JobDetail';\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      jobData: this.props.job\n    };\n\n    this.handleJobShow = () => {\n      this.setState({\n        jobdetailshow: true\n      });\n    };\n\n    this.showJobDetail = () => {\n      console.log('Show JOB...');\n      console.log(this.props.job._id); // handleJobShow()\n    };\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      jobdetailshow: false,\n      // signupshow:false,\n      currentCityPost: [],\n      cities: []\n    };\n  }\n\n  handleShow() {\n    this.setState({\n      jobdetailshow: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      jobdetailshow: false\n    });\n  }\n\n  handleJobClose() {\n    this.setState({\n      jobdetailshow: false\n    });\n  }\n\n  render() {\n    // console.log(this.state.jobData);\n    const {\n      detail\n    } = this.props.job;\n    return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.job.trailer)), React.createElement(Modal, {\n      show: this.state.jobdetailshow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Job Detail\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.job.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.job.type), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.job.siteContact), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.job.trailer), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.job.price), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.job.paid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.job.createdAt), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"pickupreturn\",\n      type: \"pickup-return-button\",\n      className: \"btn btn-success mt-1 btn-block\",\n      onClick: this.handlePickupReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Pickup Return\"), React.createElement(\"button\", {\n      id: \"pickuponly\",\n      type: \"pickup-only-button\",\n      className: \"btn btn-danger mt-1 btn-block\",\n      onClick: this.handlePickupOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Pickup Only\"))));\n  }\n\n}\n\nexport default Job; // import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n// export default Post;","map":{"version":3,"sources":["/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/Job/Job.js"],"names":["React","Modal","JobDetail","Job","Component","constructor","props","context","state","jobData","job","handleJobShow","setState","jobdetailshow","showJobDetail","console","log","_id","handleShow","bind","handleClose","currentCityPost","cities","handleJobClose","render","detail","client","address","city","trailer","location","type","siteContact","price","paid","createdAt","handlePickupReturn","handlePickupOnly"],"mappings":"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":["import React from 'react';\nimport { Modal } from 'react-bootstrap'\nimport './Job.css';\nimport JobDetail from './JobDetail/JobDetail'\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  \n    this.state = {\n      jobdetailshow: false,\n      // signupshow:false,\n      currentCityPost:[],\n      cities:[]\n    };\n  }\n  \n  state = {\n    jobData: this.props.job\n  }\n\n  handleShow() {\n    this.setState({ jobdetailshow: true });\n  }\n  \n  handleClose() {\n    this.setState({ jobdetailshow: false });\n  }\n  \n  handleJobShow = () => {\n    this.setState({ jobdetailshow: true });\n  }\n  \n  handleJobClose() {\n    this.setState({ jobdetailshow: false });\n  }\n\n  showJobDetail = () => {\n    console.log('Show JOB...')\n    console.log(this.props.job._id)\n    // handleJobShow()\n  }\n  \n  render() {\n    // console.log(this.state.jobData);\n    const { detail } = this.props.job\n    return (\n      <>\n        {/* <tr onClick={this.showJobDetail}> */}\n        <tr onClick={this.handleShow}>\n          <td>{this.props.job.client}</td>\n          <td>{this.props.job.address}</td>\n          <td>{this.props.job.city}</td>\n          <td>{this.props.job.trailer}</td>\n        </tr>\n        <Modal show={this.state.jobdetailshow} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <h2>Job Detail</h2>\n          </Modal.Header>\n          <Modal.Body>\n            {/* <JobDetail detail={this.props.job}/> */}\n            <p>{this.props.job.client}</p>\n            <p>{this.props.job.location}</p>\n            <p>{this.props.job.address}</p>\n            <p>{this.props.job.city}</p>\n            <p>{this.props.job.type}</p>\n            <p>{this.props.job.siteContact}</p>\n            <p>{this.props.job.trailer}</p>\n            <p>{this.props.job.price}</p>\n            <p>{this.props.job.paid}</p>\n            <p>{this.props.job.createdAt}</p>\n            <hr />\n            <button id=\"pickupreturn\" type=\"pickup-return-button\" className=\"btn btn-success mt-1 btn-block\" onClick={this.handlePickupReturn}>Pickup Return</button>\n            <button id=\"pickuponly\" type=\"pickup-only-button\" className=\"btn btn-danger mt-1 btn-block\" onClick={this.handlePickupOnly}>Pickup Only</button>\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default Job\n\n// import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n\n\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n\n//       })\n//       .catch(err => {\n\n//         console.log(err)\n//       })\n//   }\n\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n        \n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n   \n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}