{"ast":null,"code":"var _jsxFileName = \"/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/JobList/Job/Job.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Modal, Button, Col, Form, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport './Job.css'; // import JobDetail from './JobDetail/JobDetail'\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handlePickupReturn = () => {\n      console.log('Pickup Return...');\n      axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`).then(res => {\n        console.log(res);\n        this.handleClose();\n      }).catch(err => {\n        console.log('PICKUP RETURN failed...');\n        console.log(err.response);\n      });\n    };\n\n    this.handlePickupOnly = () => {\n      console.log('Pickup Only...');\n      axios.delete(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`).then(res => {\n        console.log(res);\n        this.handleClose();\n      }).catch(err => {\n        console.log('DELETE failed...');\n        console.log(err.response);\n      });\n    };\n\n    this.showJobDetail = () => {\n      console.log('Show JOB...');\n      console.log(this.props.job._id);\n    };\n\n    this.handleEditJob = event => {\n      event.preventDefault();\n      this.setState({\n        editing: true\n      });\n      console.log('Edit?', this.state.editing);\n    };\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      jobdetailshow: false,\n      jobData: this.props.job,\n      editing: false\n    };\n  }\n\n  handleShow() {\n    this.setState({\n      jobdetailshow: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      jobdetailshow: false\n    });\n  }\n\n  render() {\n    // console.log(this.state.jobData);\n    return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.job.trailer)), React.createElement(Modal, {\n      show: this.state.jobdetailshow,\n      onHide: this.handleClose,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Job Detail\")), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"editJob\",\n      type: \"edit-job-button\",\n      className: \"btn btn-primary mt-1 btn-block\",\n      onClick: this.handleEditJob,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Edit\")))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.job.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Job Type: \", this.props.job.type), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Contact: \", this.props.job.siteContact), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.job.trailer, \" yd trailer\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Price: $\", this.props.job.price), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Paid: \", this.props.job.paid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Dropped: \", new Date(this.props.job.createdAt).toUTCString().slice(5, 16))), this.state.editting && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"jobName\",\n      type: \"text\",\n      value: this.props.job.jobName,\n      placeholder: \"Job Name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"client\",\n      type: \"text\",\n      value: this.props.job.client,\n      placeholder: \"Builder\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"location\",\n      type: \"text\",\n      value: this.props.job.location,\n      placeholder: \"Location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"address\",\n      type: \"text\",\n      value: this.props.job.address,\n      placeholder: \"Address\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"city\",\n      type: \"text\",\n      value: this.props.job.city,\n      placeholder: \"City\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"type\",\n      type: \"text\",\n      value: this.props.job.type,\n      placeholder: \"Type of Job\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"siteContact\",\n      type: \"text\",\n      value: this.props.job.siteContact,\n      placeholder: \"Site Contact\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"trailer\",\n      type: \"text\",\n      value: this.props.job.trailer,\n      placeholder: \"Trailer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"price\",\n      type: \"number\",\n      value: this.props.job.price,\n      placeholder: \"Price\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Button, {\n      value: \"Submit\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Add New Job\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Col, {\n      smOffset: 2,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      value: \"Submit\",\n      type: \"submit\",\n      onClick: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default Job; // import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n// export default Post;","map":{"version":3,"sources":["/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/JobList/Job/Job.js"],"names":["React","axios","Modal","Button","Col","Form","FormGroup","FormControl","FormLabel","Job","Component","constructor","props","context","handlePickupReturn","console","log","put","job","_id","then","res","handleClose","catch","err","response","handlePickupOnly","delete","showJobDetail","handleEditJob","event","preventDefault","setState","editing","state","handleShow","bind","jobdetailshow","jobData","render","client","address","city","trailer","location","type","siteContact","price","paid","Date","createdAt","toUTCString","slice","editting","jobName","handleChange","handleSubmit","handleEditSubmit"],"mappings":"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":["import React from 'react';\nimport axios from 'axios';\nimport {  Modal,\n          Button,\n          Col,\n          Form,\n          FormGroup,\n          FormControl,\n          FormLabel\n        } from 'react-bootstrap';\nimport './Job.css';\n// import JobDetail from './JobDetail/JobDetail'\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  \n    this.state = {\n      jobdetailshow: false,\n      jobData: this.props.job,\n      editing: false\n\n    };\n  }\n  \n\n\n  handleShow() {\n    this.setState({ jobdetailshow: true });\n  }\n  \n  handleClose() {\n    this.setState({ jobdetailshow: false });\n  }\n  \n  handlePickupReturn = () => {\n    console.log('Pickup Return...')\n    axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`)\n      .then(res => {\n        console.log(res)\n        this.handleClose();\n      })\n      .catch(err => {\n        console.log('PICKUP RETURN failed...')\n        console.log(err.response)\n      })\n  }\n  \n  handlePickupOnly = () => {\n    console.log('Pickup Only...');\n    axios.delete(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`)\n      .then(res => {\n        console.log(res)\n        this.handleClose();\n        })\n      .catch(err => {\n        console.log('DELETE failed...')\n        console.log(err.response)\n      })\n  }\n\n  showJobDetail = () => {\n    console.log('Show JOB...')\n    console.log(this.props.job._id)\n  }\n\n  handleEditJob = (event) => {\n    event.preventDefault();\n    this.setState({ editing: true })\n    console.log('Edit?', this.state.editing)\n  }\n  \n  render() {\n    // console.log(this.state.jobData);\n    return (\n      <>\n        {/* <tr onClick={this.showJobDetail}> */}\n        <tr onClick={this.handleShow}>\n          <td>{this.props.job.client}</td>\n          <td>{this.props.job.address}</td>\n          <td>{this.props.job.city}</td>\n          <td>{this.props.job.trailer}</td>\n        </tr>\n        <Modal show={this.state.jobdetailshow} onHide={this.handleClose} variant=\"dark\">\n          <Modal.Header closeButton>\n            <div class=\"row\">\n              <div class=\"col\">\n                <h2>Job Detail</h2>\n              </div>\n              <div class=\"col\">\n                <button id=\"editJob\" type=\"edit-job-button\" className=\"btn btn-primary mt-1 btn-block\" onClick={this.handleEditJob}>Edit</button>\n              </div>\n            </div>\n          </Modal.Header>\n          <Modal.Body>\n            <div>\n              <p>{this.props.job.client}</p>\n              <p>{this.props.job.location}</p>\n              <p>{this.props.job.address}</p>\n              <p>{this.props.job.city}</p>\n              <hr />\n              <p>Job Type: {this.props.job.type}</p>\n              <p>Contact: {this.props.job.siteContact}</p>\n              <p>{this.props.job.trailer} yd trailer</p>\n              <hr />\n              <p>Price: ${this.props.job.price}</p>\n              <p>Paid: {this.props.job.paid}</p>\n              <p>Dropped: {new Date(this.props.job.createdAt).toUTCString().slice(5, 16)}</p>\n            </div>\n          {this.state.editting && \n            <div>\n              <Form>\n                {/* JOB NAME entry */}\n                <FormGroup>\n                  {/* <FormLabel>Builder</FormLabel> */}\n                  <FormControl name=\"jobName\" type=\"text\" value={this.props.job.jobName} placeholder=\"Job Name\" onChange={this.handleChange}/>\n                </FormGroup>\n      \n                {/* CLIENT entry */}\n                <FormGroup>\n                  {/* <FormLabel>Builder</FormLabel> */}\n                  <FormControl name=\"client\" type=\"text\" value={this.props.job.client} placeholder=\"Builder\" onChange={this.handleChange}/>\n                </FormGroup>\n                \n                {/* LOCATION */}\n                <FormGroup>\n                  {/* <FormLabel>Location</FormLabel> */}\n                  <FormControl name=\"location\" type=\"text\" value={this.props.job.location} placeholder=\"Location\" onChange={this.handleChange}/>\n                </FormGroup>\n                \n                {/* ADDRESS */}\n                <FormGroup>\n                  {/* <FormLabel>Address</FormLabel> */}\n                  <FormControl name=\"address\" type=\"text\" value={this.props.job.address} placeholder=\"Address\" onChange={this.handleChange}/>\n                </FormGroup>\n                \n                {/* CITY */}\n                <FormGroup>\n                  {/* <FormLabel>City</FormLabel> */}\n                  <FormControl name=\"city\" type=\"text\" value={this.props.job.city} placeholder=\"City\" onChange={this.handleChange}/>\n                </FormGroup>\n              \n                {/* TYPE of job */}\n                <FormGroup>\n                  {/* <FormLabel>Type of Job</FormLabel> */}\n                  <FormControl name=\"type\" type=\"text\" value={this.props.job.type} placeholder=\"Type of Job\" onChange={this.handleChange}/>\n                </FormGroup>\n              \n                {/* SITE CONTACT */}\n                <FormGroup>\n                  {/* <FormLabel>Site Contact</FormLabel> */}\n                  <FormControl name=\"siteContact\" type=\"text\" value={this.props.job.siteContact} placeholder=\"Site Contact\" onChange={this.handleChange}/>\n                </FormGroup>\n              \n                {/* TRAILER */}\n                <FormGroup>\n                  {/* <FormLabel>City</FormLabel> */}\n                  <FormControl name=\"trailer\" type=\"text\" value={this.props.job.trailer} placeholder=\"Trailer\" onChange={this.handleChange}/>\n                </FormGroup>\n              \n                {/* PRICE */}\n                <FormGroup>\n                  {/* <FormLabel>Price</FormLabel> */}\n                  <FormControl name=\"price\" type=\"number\" value={this.props.job.price} placeholder=\"Price\" onChange={this.handleChange}/>\n                </FormGroup>\n              \n              {/* SUBMIT button */}\n                <FormGroup>\n                  <Col sm={10}>\n                    <Button value='Submit' type='submit' onClick={this.handleSubmit} >Add New Job</Button>\n                  </Col>\n                </FormGroup>\n                <FormGroup>\n                <Col smOffset={2} sm={10}>\n                  <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n                </Col>\n                </FormGroup>\n              </Form>\n            </div>\n          }\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default Job\n\n// import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n\n\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n\n//       })\n//       .catch(err => {\n\n//         console.log(err)\n//       })\n//   }\n\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n        \n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n   \n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}