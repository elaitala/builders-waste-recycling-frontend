{"ast":null,"code":"var _jsxFileName = \"/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/JobList/Job/Job.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Modal // Button,\n// Col,\n, Form, FormGroup, FormControl // FormLabel\n} from 'react-bootstrap';\nimport './Job.css'; // import JobDetail from './JobDetail/JobDetail'\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handlePickupReturn = () => {\n      console.log('Pickup Return...');\n      axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`).then(res => {\n        console.log(res);\n        this.handleClose();\n      }).catch(err => {\n        console.log('PICKUP RETURN failed...');\n        console.log(err.response);\n      });\n    };\n\n    this.handlePickupOnly = () => {\n      console.log('Pickup Only...');\n      axios.delete(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`).then(res => {\n        console.log(res);\n        this.handleClose(); // Refreshes AXIOS JOB DATA on create\n\n        this.props.getJobs();\n      }).catch(err => {\n        console.log('DELETE failed...');\n        console.log(err.response);\n      });\n    };\n\n    this.showJobDetail = () => {\n      console.log('Show JOB...');\n      console.log(this.props.job._id);\n    };\n\n    this.handleEditJob = event => {\n      event.preventDefault();\n      this.setState({\n        editing: true\n      });\n      console.log('Edit?', this.state.editing);\n    };\n\n    this.handleEditSubmit = event => {\n      event.preventDefault();\n      console.log('Submitting UPDATE...');\n      console.log('Job Data:', this.state);\n      console.log('State.jobData:', this.state.jobData);\n      axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`, this.state).then(res => {\n        console.log('Inserting JOB into DB...');\n        console.log(res);\n        console.log(res.data);\n        this.setState({\n          jobData: res.data\n        });\n        this.setState({\n          editing: false\n        }); // this.handleClose();\n        // Refreshes AXIOS JOB DATA on create\n\n        this.props.getJobs();\n        console.log('Updated state:', this.state);\n      }).catch(err => {\n        console.log('UPDATE failed...');\n        console.log(err.response);\n      });\n    };\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      jobName: this.props.job.jobName,\n      client: this.props.job.client,\n      location: this.props.job.location,\n      address: this.props.job.location,\n      city: this.props.job.city,\n      type: this.props.job.type,\n      siteContact: this.props.job.siteContact,\n      trailer: this.props.job.trailer,\n      price: this.props.job.price,\n      jobdetailshow: false,\n      jobData: this.props.job,\n      editing: false\n    };\n  } // Updates the STATE of the form\n\n\n  handleShow() {\n    this.setState({\n      jobdetailshow: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      jobdetailshow: false\n    });\n  }\n\n  render() {\n    // console.log(this.state.jobData);\n    return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.props.job.trailer)), React.createElement(Modal, {\n      show: this.state.jobdetailshow,\n      onHide: this.handleClose,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Job Detail\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, !this.state.editing && React.createElement(\"button\", {\n      id: \"editJob\",\n      type: \"edit-job-button\",\n      className: \"btn btn-primary mt-1 btn-block\",\n      onClick: this.handleEditJob,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Edit\"), this.state.editing && React.createElement(\"button\", {\n      id: \"editJob\",\n      type: \"edit-job-button\",\n      className: \"btn btn-primary mt-1 btn-block\",\n      onClick: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Save\"))))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, !this.state.editing && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.props.job.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Job Type: \", this.props.job.type), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Contact: \", this.props.job.siteContact), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.job.trailer, \" yd trailer\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Price: $\", this.props.job.price), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Paid: \", this.props.job.paid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Dropped: \", new Date(this.props.job.createdAt).toUTCString().slice(5, 16))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"pickupreturn\",\n      type: \"pickup-return-button\",\n      className: \"btn btn-success mt-1 btn-block\",\n      onClick: this.handlePickupReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Pickup Return\")), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"pickuponly\",\n      type: \"pickup-only-button\",\n      className: \"btn btn-danger mt-1 btn-block\",\n      onClick: this.handlePickupOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Pickup Only\")))), this.state.editing && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"jobName\",\n      type: \"text\",\n      defaultValue: this.props.job.jobName,\n      placeholder: \"Job Name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"client\",\n      type: \"text\",\n      defaultValue: this.props.job.client,\n      placeholder: \"Builder\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"location\",\n      type: \"text\",\n      defaultValue: this.props.job.location,\n      placeholder: \"Location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"address\",\n      type: \"text\",\n      defaultValue: this.props.job.address,\n      placeholder: \"Address\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"city\",\n      type: \"text\",\n      defaultValue: this.props.job.city,\n      placeholder: \"City\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"type\",\n      type: \"text\",\n      defaultValue: this.props.job.type,\n      placeholder: \"Type of Job\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"siteContact\",\n      type: \"text\",\n      defaultValue: this.props.job.siteContact,\n      placeholder: \"Site Contact\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"trailer\",\n      type: \"text\",\n      defaultValue: this.props.job.trailer,\n      placeholder: \"Trailer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"price\",\n      type: \"number\",\n      defaultValue: this.props.job.price,\n      placeholder: \"Price\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Job; // import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n// export default Post;","map":{"version":3,"sources":["/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/JobList/Job/Job.js"],"names":["React","axios","Modal","Form","FormGroup","FormControl","Job","Component","constructor","props","context","handleChange","event","setState","target","name","value","handlePickupReturn","console","log","put","job","_id","then","res","handleClose","catch","err","response","handlePickupOnly","delete","getJobs","showJobDetail","handleEditJob","preventDefault","editing","state","handleEditSubmit","jobData","data","handleShow","bind","jobName","client","location","address","city","type","siteContact","trailer","price","jobdetailshow","render","paid","Date","createdAt","toUTCString","slice"],"mappings":"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":["import React from 'react';\nimport axios from 'axios';\nimport {  Modal,\n          // Button,\n          // Col,\n          Form,\n          FormGroup,\n          FormControl,\n          // FormLabel\n        } from 'react-bootstrap';\nimport './Job.css';\n// import JobDetail from './JobDetail/JobDetail'\n\nclass Job extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  \n    this.state = {\n      jobName: this.props.job.jobName,\n      client: this.props.job.client,\n      location: this.props.job.location,\n      address: this.props.job.location,\n      city: this.props.job.city,\n      type: this.props.job.type,\n      siteContact: this.props.job.siteContact,\n      trailer: this.props.job.trailer,\n      price: this.props.job.price,\n      \n      jobdetailshow: false,\n      jobData: this.props.job,\n      editing: false\n\n    };\n  }\n  \n  // Updates the STATE of the form\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleShow() {\n    this.setState({ jobdetailshow: true });\n  }\n  \n  handleClose() {\n    this.setState({ jobdetailshow: false });\n  }\n  \n  handlePickupReturn = () => {\n    console.log('Pickup Return...')\n    axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`)\n      .then(res => {\n        console.log(res)\n        this.handleClose();\n      })\n      .catch(err => {\n        console.log('PICKUP RETURN failed...')\n        console.log(err.response)\n      })\n  }\n  \n  handlePickupOnly = () => {\n    console.log('Pickup Only...');\n    axios.delete(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`)\n      .then(res => {\n        console.log(res)\n        this.handleClose();\n        // Refreshes AXIOS JOB DATA on create\n        this.props.getJobs();\n        })\n      .catch(err => {\n        console.log('DELETE failed...')\n        console.log(err.response)\n      })\n  }\n\n  showJobDetail = () => {\n    console.log('Show JOB...')\n    console.log(this.props.job._id)\n  }\n\n  handleEditJob = (event) => {\n    event.preventDefault();\n    this.setState({ editing: true })\n    console.log('Edit?', this.state.editing)\n  }\n\n  handleEditSubmit = (event) => {\n    event.preventDefault();\n\n    console.log('Submitting UPDATE...');\n    console.log('Job Data:', this.state);\n    console.log('State.jobData:', this.state.jobData);\n\n    axios.put(`http://localhost:4000/api/v1/jobs/${this.props.job._id}`, this.state)\n      .then(res => {\n        console.log('Inserting JOB into DB...')\n        console.log(res)\n        console.log(res.data)\n        this.setState({jobData: res.data})\n        this.setState({ editing: false })\n        // this.handleClose();\n        // Refreshes AXIOS JOB DATA on create\n        this.props.getJobs();\n        console.log('Updated state:', this.state)\n      })\n      .catch(err => {\n        console.log('UPDATE failed...')\n        console.log(err.response)\n      })\n  }\n  \n  render() {\n    // console.log(this.state.jobData);\n    return (\n      <>\n        {/* <tr onClick={this.showJobDetail}> */}\n        <tr onClick={this.handleShow}>\n          <td>{this.props.job.client}</td>\n          <td>{this.props.job.address}</td>\n          <td>{this.props.job.city}</td>\n          <td>{this.props.job.trailer}</td>\n        </tr>\n        <Modal show={this.state.jobdetailshow} onHide={this.handleClose} variant=\"dark\">\n          <Modal.Header closeButton>\n            <div className=\"row\">\n              <div className=\"col\">\n                <h2>Job Detail</h2>\n              </div>\n              <div className=\"col\">\n                <>\n                {!this.state.editing &&\n                  <button id=\"editJob\" type=\"edit-job-button\" className=\"btn btn-primary mt-1 btn-block\" onClick={this.handleEditJob}>Edit</button>\n                }\n                {this.state.editing && \n                  <button id=\"editJob\" type=\"edit-job-button\" className=\"btn btn-primary mt-1 btn-block\" onClick={this.handleEditSubmit}>Save</button>\n                }\n                </>\n              </div>\n            </div>\n          </Modal.Header>\n          <Modal.Body>\n            <>\n            {!this.state.editing &&\n              <div>\n                <div>\n                  <p>{this.props.job.client}</p>\n                  <p>{this.props.job.location}</p>\n                  <p>{this.props.job.address}</p>\n                  <p>{this.props.job.city}</p>\n                  <hr />\n                  <p>Job Type: {this.props.job.type}</p>\n                  <p>Contact: {this.props.job.siteContact}</p>\n                  <p>{this.props.job.trailer} yd trailer</p>\n                  <hr />\n                  <p>Price: ${this.props.job.price}</p>\n                  <p>Paid: {this.props.job.paid}</p>\n                  <p>Dropped: {new Date(this.props.job.createdAt).toUTCString().slice(5, 16)}</p>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <button id=\"pickupreturn\" type=\"pickup-return-button\" className=\"btn btn-success mt-1 btn-block\" onClick={this.handlePickupReturn}>Pickup Return</button>\n                  </div>\n                  <div class=\"col\">\n                    <button id=\"pickuponly\" type=\"pickup-only-button\" className=\"btn btn-danger mt-1 btn-block\" onClick={this.handlePickupOnly}>Pickup Only</button>\n                  </div>\n                </div>\n              </div>\n            }\n            {this.state.editing && \n              <div>\n                <Form>\n                  {/* JOB NAME entry */}\n                  <FormGroup>\n                    {/* <FormLabel>Builder</FormLabel> */}\n                    <FormControl name=\"jobName\" type=\"text\" defaultValue={this.props.job.jobName} placeholder=\"Job Name\" onChange={this.handleChange}/>\n                  </FormGroup>\n        \n                  {/* CLIENT entry */}\n                  <FormGroup>\n                    {/* <FormLabel>Builder</FormLabel> */}\n                    <FormControl name=\"client\" type=\"text\" defaultValue={this.props.job.client} placeholder=\"Builder\" onChange={this.handleChange}/>\n                  </FormGroup>\n                  \n                  {/* LOCATION */}\n                  <FormGroup>\n                    {/* <FormLabel>Location</FormLabel> */}\n                    <FormControl name=\"location\" type=\"text\" defaultValue={this.props.job.location} placeholder=\"Location\" onChange={this.handleChange}/>\n                  </FormGroup>\n                  \n                  {/* ADDRESS */}\n                  <FormGroup>\n                    {/* <FormLabel>Address</FormLabel> */}\n                    <FormControl name=\"address\" type=\"text\" defaultValue={this.props.job.address} placeholder=\"Address\" onChange={this.handleChange}/>\n                  </FormGroup>\n                  \n                  {/* CITY */}\n                  <FormGroup>\n                    {/* <FormLabel>City</FormLabel> */}\n                    <FormControl name=\"city\" type=\"text\" defaultValue={this.props.job.city} placeholder=\"City\" onChange={this.handleChange}/>\n                  </FormGroup>\n                \n                  {/* TYPE of job */}\n                  <FormGroup>\n                    {/* <FormLabel>Type of Job</FormLabel> */}\n                    <FormControl name=\"type\" type=\"text\" defaultValue={this.props.job.type} placeholder=\"Type of Job\" onChange={this.handleChange}/>\n                  </FormGroup>\n                \n                  {/* SITE CONTACT */}\n                  <FormGroup>\n                    {/* <FormLabel>Site Contact</FormLabel> */}\n                    <FormControl name=\"siteContact\" type=\"text\" defaultValue={this.props.job.siteContact} placeholder=\"Site Contact\" onChange={this.handleChange}/>\n                  </FormGroup>\n                \n                  {/* TRAILER */}\n                  <FormGroup>\n                    {/* <FormLabel>City</FormLabel> */}\n                    <FormControl name=\"trailer\" type=\"text\" defaultValue={this.props.job.trailer} placeholder=\"Trailer\" onChange={this.handleChange}/>\n                  </FormGroup>\n                \n                  {/* PRICE */}\n                  <FormGroup>\n                    {/* <FormLabel>Price</FormLabel> */}\n                    <FormControl name=\"price\" type=\"number\" defaultValue={this.props.job.price} placeholder=\"Price\" onChange={this.handleChange}/>\n                  </FormGroup>\n                \n                  {/* <FormGroup>\n                    <Col smOffset={2} sm={10}>\n                      <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Save</Button>\n                    </Col>\n                  </FormGroup> */}\n                  \n                </Form>\n              </div>\n            }          \n          </>\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default Job\n\n// import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n\n\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n\n//       })\n//       .catch(err => {\n\n//         console.log(err)\n//       })\n//   }\n\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n        \n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n   \n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}