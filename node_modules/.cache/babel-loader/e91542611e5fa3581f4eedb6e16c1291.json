{"ast":null,"code":"var _jsxFileName = \"/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/Job/Job.js\";\nimport React from 'react';\nimport './Job.css';\n\nclass Job extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobData: this.props.job\n    };\n  }\n\n  render() {\n    // console.log(this.state.jobData);\n    return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n      onClick: this.showJobDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.job.client), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.job.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.job.city), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.job.trailer)));\n  }\n\n}\n\nexport default Job; // import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n// export default Post;","map":{"version":3,"sources":["/Users/elaitala/sei/github/builders-waste-recycling/BWR-frontend/src/components/Job/Job.js"],"names":["React","Job","Component","state","jobData","props","job","render","showJobDetail","client","address","city","trailer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC;AADd,KADwB;AAAA;;AAQhCC,EAAAA,MAAM,GAAG;AACP;AACA,WACE,0CACE;AAAI,MAAA,OAAO,EAAE,KAAKC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWC,GAAX,CAAeG,MAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWC,GAAX,CAAeI,OAApB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWC,GAAX,CAAeK,IAApB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWC,GAAX,CAAeM,OAApB,CAJF,CADF,CADF;AAUD;;AApB+B;;AAuBlC,eAAeX,GAAfsourcesContent":["import React from 'react';\nimport './Job.css';\n\nclass Job extends React.Component {\n  state = {\n    jobData: this.props.job\n  }\n\n  \n  \n  \n  render() {\n    // console.log(this.state.jobData);\n    return (\n      <>\n        <tr onClick={this.showJobDetail}>\n          <td>{this.props.job.client}</td>\n          <td>{this.props.job.address}</td>\n          <td>{this.props.job.city}</td>\n          <td>{this.props.job.trailer}</td>\n        </tr>\n      </>\n    )\n  }\n}\n\nexport default Job\n\n// import React, { Component } from \"react\";\n// import Modal from 'react-bootstrap/Modal';\n// import {\n//   Button,\n//   Col,\n//   Form,\n//   FormGroup,\n//   FormControl,\n//   FormLabel\n// } from 'react-bootstrap';\n// import { NavLink, Link } from 'react-router-dom';\n// import CreatePost from '../../Landing/CityPosts/CreatePost/CreatePost'\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n\n// class Post extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       postData: this.props.post,\n//       showbtn: \"none\",\n//       deleted: false,\n//       editting: false,\n//       tempPostData: null\n//     }\n//     // this.checkCurrentUser();\n//   }\n//   handleTitle = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         title: value\n//       }\n//     })\n//   }\n\n//   handleContent = (e) => {\n//     const value = e.target.value;\n//     this.setState({\n//       postData: {\n//         ...this.state.postData,\n//         content: value\n//       }\n//     })\n//   }\n//   handleEdit = (event) => {\n//     event.preventDefault();\n//     this.setState({ editting: true })\n//   }\n\n\n//   handleDelete = (event) => { \n//     const PORT = process.env.PORT;\n//     axios.delete(`http://localhost:${PORT}/api/v1/posts/${this.props.post._id}`, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         console.log(res)\n//         this.setState({\n//           deleted: true\n//         })\n\n//       })\n//       .catch(err => {\n\n//         console.log(err)\n//       })\n//   }\n\n//   checkCurrentUser = () => {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo\n//     // console.log('userId',userId)\n//     if (this.props.post.user) {\n//       console.log('it exist')\n//       console.log('this.user', this.props.post.user._id)\n//       console.log('userId',userId)\n//       console.log('the same', this.props.post.user._id == userId)\n//       if (this.props.post.user._id == userId) {\n//           console.log('the same', this.props.post.user._id == userId)\n        \n//         this.setState({\n//           showbtn: \"block\"\n//         })\n//         console.log(this.state)\n//       }\n//     }\n   \n//   }\n//   handleEditSubmit = (event) => {\n//     const PORT = process.env.PORT;\n//     event.preventDefault();\n//     axios.put(`http://localhost:${PORT}/api/v1/posts/${this.state.postData._id}`, this.state.postData, {\n//       headers: { \"authorization\": `bearer ${localStorage.getItem('jwt')}` }\n//     })\n//       .then(res => {\n//         this.setState({tempPostData: res.data})\n//         this.setState({ editting: false })\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n\n//   render() {\n//     let userId = jwt.decode(localStorage.getItem('jwt')).foo;\n//     return (<>{!this.state.deleted && <>\n//         <div className=\"card mt-4 mb-3 ml-5 shadow p-3 bg-white rounded\" >\n//           <div className=\"row no-gutters\">\n//             <div className=\"col-lg-4\">\n//               <img src={this.state.postData ? this.state.postData.img : \"https://i.ibb.co/tMG6d9p/images.jpg\"} className=\"card-img\" />\n//               <Link to={{\n//                 pathname: '/postdetail/' + this.state.postData._id,\n//                 state: {\n//                   id: this.state.postData._id\n//                 }\n//               }} >\n//                 <button type=\"detail-button\" className=\"btn btn-outline-dark mt-3 btn-block\" >Post Detail</button>\n//               </Link>\n//               {(this.props.post.user && userId === this.props.post.user._id) && <>\n//                 <button id=\"editbtn\" type=\"edit-button\" className=\"btn btn-outline-primary mt-1 btn-block\" onClick={this.handleEdit}>Edit Post</button>\n//                 <button type=\"delete-button\" id=\"deletebtn\" className=\"btn btn-outline-danger mt-1 btn-block\" onClick={this.handleDelete}>Delete Post</button>\n//               </>}\n\n//             </div>\n//             <div className=\"col-md-8\">\n//               <div className=\"card-body\">\n//                 <h3 className=\"card-title\">{(this.state.tempPostData&&this.state.tempPostData.title) || this.props.post.title}</h3>\n//                 {(this.state.tempPostData)?\n//                 <p className=\"text-muted\">{this.state.tempPostData.location.city}, {this.state.tempPostData.location && this.state.tempPostData.location.country}</p>:\n//                 <p className=\"text-muted\">{this.props.post.location && this.props.post.location.city}, {this.props.post.location && this.props.post.location.country}</p>}\n//                 <p className=\"card-text\">{(this.state.tempPostData&&this.state.tempPostData.content) || this.props.post.content}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n//               </div>\n//             </div>\n//           </div>\n//           {this.state.editting && \n//           <div>\n//             <Form>\n//               {/* CITY SELECT functionality */}\n\n//               {/* TITLE functionality */}\n//               <FormGroup>\n//                 <FormLabel>Title</FormLabel>\n//                 <FormControl id=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.postData.title} onChange={this.handleTitle} />\n//               </FormGroup>\n//               {/* TEXT AREA functionality */}\n//               <FormGroup>\n//                 <FormLabel>Post</FormLabel>\n//                 <FormControl id=\"content\" as=\"textarea\" rows=\"5\" placeholder=\"Adventure goes here\" value={this.state.postData.content} onChange={this.handleContent} />\n//               </FormGroup>\n//               {/* Add a PICTURE functionality */}\n//               {/* <div className=\"form-group\">\n//           <label id=\"picture\" for=\"exampleFormControlFile1\">City Picture</label>\n//           <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n//         </div> */}\n//               <FormGroup>\n//                 <Col smOffset={2} sm={10}>\n//                   <Button value='Submit' type='submit' onClick={this.handleEditSubmit} >Submit</Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>}\n//         </div>\n//       </>}</>)\n//   }\n// }\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}